---

all:
  vars:
    ansible_connection: ssh
    ansible_user: ubuntu
    ansible_become: true
    ansible_ssh_private_key_file: "{{ SSH_PRIVATE_KEY }}"

    installation_method: archive
    confluent_archive_file_source: https://packages.confluent.io/archive/7.4/confluent-7.4.0.tar.gz

    #### Monitoring Configuration ####
    jmxexporter_enabled: "true"
    jolokia_enabled: "true"

    ## TLS Configuration - Custom Certificates
    ssl_enabled: "true"
    ssl_provided_keystore_and_truststore: true
    ssl_keystore_filepath: "/home/ubuntu/ssl/{{ inventory_hostname }}-keystore.jks"
    ssl_keystore_key_password: "changeme"
    ssl_keystore_store_password: "changeme"
    ssl_truststore_filepath: "/home/ubuntu/ssl/kafka-truststore.jks"
    ssl_truststore_password: "changeme"
    ssl_truststore_ca_cert_alias: root-ca

    ssl_mutual_auth_enabled: "true"
    kafka_controller_sasl_protocol: "kerberos"

    ## Kerberos Configuration
    sasl_protocol: "kerberos"
    kerberos_configure: "true"
    kerberos:
      realm: "confluent.example.com"
      kdc_hostmane: "samba.confluent.example.com"
      admin_hostname: "samba.confluent.example.com" 
      canonicalize: "false"

    ## RBAC Configuration
    rbac_enabled: "true"
    rbac_component_additional_system_admins: [ alice ]
    mds_super_user: "mds"
    mds_super_user_password: "mds-secret"
    kafka_controller_ldap_user: "kafka"
    kafka_controller_ldap_password: "kafka-secret"
    kafka_broker_ldap_user: "kafka"
    kafka_broker_ldap_password: "kafka-secret"
    schema_registry_ldap_user: "schemaregistry"
    schema_registry_ldap_password: "schema-secret"
    kafka_connect_ldap_user: "connect"
    kafka_connect_ldap_password: "connect-secret"
    ksql_ldap_user: "ksql"
    ksql_ldap_password: "ksql-secret"
    kafka_rest_ldap_user: "rest"
    kafka_rest_ldap_password: "rest-secret"
    control_center_ldap_user: "controlcenter"
    control_center_ldap_password: "c3-secret"

    kafka_broker_custom_listeners:
      
      ## Internal, Broker to Broker communication
      broker:
        name: "BROKER"
        port: 9091
        ssl_enabled: "true"
        ssl_mutual_auth_enabled: "false"
        sasl_protocol: "kerberos"
      
      ## Internal, MDS with OAuth
      internal:
        name: "INTERNAL"
        port: 9092
        ssl_enabled: "true"
        ssl_mutual_auth_enabled: "false"

      ## External, mTLS
      client_mtls:
        name: "CLIENT_MTLS"
        port: 9093
        ssl_enabled: "true"
        ssl_mutual_auth_enabled: "true"

      ## External, LDAP with RBAC
      client_ldap:
        name: "CLIENT_LDAP"
        port: 9094
        ssl_enabled: "true"
        ssl_mutual_auth_enabled: "false"
        sasl_protocol: "plain"


kafka_controller:
  vars:
    kafka_controller_kerberos_keytab_path: "/home/ubuntu/keytabs/controller-{{ inventory_hostname_short }}.keytab"
    kafka_controller_kerberos_principal: "kafka/{{ inventory_hostname }}@{{ kerberos.realm }}"
  
  hosts:
    <kafka-controller-host-1>:
      kafka_controller_custom_properties:
        broker.rack: "<az-1>"

    <kafka-controller-host-2>:
      kafka_controller_custom_properties:
        broker.rack: "<az-2>"
    
    <kafka-controller-host-3>:
      kafka_controller_custom_properties:
        broker.rack: "<az-3>"

kafka_broker:
  vars:
    kafka_broker_kerberos_keytab_path: "/home/ubuntu/kerberos/kafka-{{ inventory_hostname_short }}.keytab"
    kafka_broker_kerberos_principal: "kafka/{{ inventory_hostname }}@{{ kerberos.realm }}"
  
    
    kafka_broker_custom_properties:

      ## LDAP Configuration
      ldap.java.naming.factory.initial: com.sun.jndi.ldap.LdapCtxFactory
      ldap.com.sun.jndi.ldap.read.timeout: 3000
      ldap.java.naming.provider.url: "ldaps://samba.confluent.example.com"
      ldap.java.naming.security.protocol: SSL
      ldap.ssl.truststore.location: "{{ kafka_broker_truststore_path }}"
      ldap.ssl.truststore.password: "{{ kafka_broker_truststore_storepass }}"

      ldap.java.naming.security.principal: "charlie@confluent.example.com"
      ldap.java.naming.security.credentials: charlie-secret
      ldap.java.naming.security.authentication: simple

      ldap.user.search.base: "OU=Users,OU=Kafka,DC=confluent,DC=example,DC=com"
      ldap.search.mode: USERS
      ldap.user.name.attribute: sAMAccountName
      ldap.user.memberof.attribute: memberOf
      ldap.user.memberof.attribute.pattern: "CN=(.*),OU=Groups,OU=Kafka,DC=confluent,DC=example,DC=com"
      ldap.user.object.class: user
      ldap.user.search.scope: 2
      
      ## License
      confluent.license: # your license file here

      ## Schema Registry Authentication
      confluent.basic.auth.credentials.source: "USER_INFO"
      confluent.basic.auth.user.info: "alice:alice-secret"

      ## Standard settings for Broker
      auto.create.topics.enable: "false"
      default.replication.factor: 3
      min.insync.replica: 2

      ## Special callback for Client LDAP listener
      listener.name.ldap.plain.sasl.server.callback.handler.class: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
      # From https://docs.confluent.io/platform/current/kafka/configure-mds/mutual-tls-auth-rbac.html#principal-mapping-rules-for-ssl-listeners-extract-a-principal-from-a-certificate
      listener.name.client.ssl.principal.mapping.rules: |
        RULE:^CN=([a-zA-Z0-9]*).*$/$1/L ,\
        DEFAULT

  hosts:
    <kafka-broker-host-1>.confluent.example.com:
      kafka_broker_custom_properties:
        broker.rack: "<az-1>"
    
    <kafka-broker-host-2>.confluent.example.com:
      kafka_broker_custom_properties:
        broker.rack: "<az-2>"
    
    <kafka-broker-host-3>.confluent.example.com:
      kafka_broker_custom_properties:
        broker.rack: "<az-3>"

kafka_connect:
  vars:
    kafka_connect_kerberos_keytab_path: "/home/ubuntu/kerberos/kafka-connect-{{ inventory_hostname_short }}.keytab"
    kafka_connect_kerberos_principal: "kafka-connect/{{ inventory_hostname }}@{{ kerberos.realm }}"

  hosts:
    <kafka-connect-host-1>.confluent.example.com:
    <kafka-connect-host-2>.confluent.example.com:

schema_registry:
  vars:
    schema_registry_kerberos_keytab_path: "/home/ubuntu/kerberos/schema-registry-{{ inventory_hostname_short }}.keytab"
    schema_registry_kerberos_principal: "schema-registry/{{ inventory_hostname }}@{{ kerberos.realm }}"
  
  hosts:
    <schema-registry-host-1>.confluent.example.com:

kafka_rest:
  vars:
    kafka_rest_kerberos_keytab_path: "/home/ubuntu/kerberos/rest-{{ inventory_hostname_short }}.keytab"
    kafka_rest_kerberos_principal: "rest/{{ inventory_hostname }}@{{ kerberos.realm }}"

  hosts:
    <kafka-rest-host-1>.confluent.example.com:

ksql:
  vars:
    ksql_kerberos_keytab_path: "/home/ubuntu/kerberos/ksqldb-{{ inventory_hostname_short }}.keytab"
    ksql_kerberos_principal: "ksqldb/{{ inventory_hostname }}@{{ kerberos.realm }}"

  hosts:
    <ksql-host-1>.confluent.example.com:

control_center:
  vars:
    control_center_kerberos_keytab_path: "/home/ubuntu/kerberos/control-center-{{ inventory_hostname_short }}.keytab"
    control_center_kerberos_principal: "control-center/{{ inventory_hostname }}@{{ kerberos.realm }}"

  hosts:
    <control-center-host-1>.confluent.example.com:
